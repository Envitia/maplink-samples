<Window x:Class="ContourApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ContourApp"
        mc:Ignorable="d"
        xmlns:mmv="clr-namespace:DrawingSurfacePanel;assembly=MapViewerPanel"
        Title="MapLink Pro Moving Features .NET WPF Sample" WindowState="Maximized">
  <Grid>
    <!-- 
    MapLink does not yet have a WPF-native drawing surface, so we need to wrap the Windows.Forms drawing surface in a WindowsFormHost.
    This approach, however, means that we cannot simply overlay WPF controls on the drawing surface, due to the "airspace issue":
    https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/technology-regions-overview?view=netframeworkdesktop-4.8
    We solve this with the insertion of the OverlayControl, a solution devised  by Saurabh Singh (https://www.codeproject.com/Tips/5326355/Airspace-Solution).
    "OverlayContainer is a wrapper control where you can provide intended content to render on top of WinformHost/Browser.
    This container injects another WPF window into the region supplying its own content. OverlayWindow is the one being injected. 
    Extended HwndHost is used to glue WPF window into OverlayContainer."
    -->
    <WindowsFormsHost Name="MainMap">
      <WindowsFormsHost.Child>
        <mmv:MapViewerPanel />
      </WindowsFormsHost.Child>
    </WindowsFormsHost>

    <local:OverlayControl x:Name="OverlayContainer" >
      <Grid>

        <Grid x:Name="MaximiseGrid" Margin="200,30,30,30" Panel.ZIndex="40">
        </Grid>

        <Grid x:Name="DockGrid">
          <DockPanel>
            <DockPanel LastChildFill="True" DockPanel.Dock="Left">
              <DockPanel Name="BottomDockPanel" DockPanel.Dock="Right" Margin="3" LastChildFill="True" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" MinHeight="200">
              </DockPanel>
            </DockPanel>
          </DockPanel>
        </Grid>

        <Grid x:Name="FloatingWindowGrid">
          <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="2*" />
          </Grid.RowDefinitions>
          <Grid Grid.Row="0" Name="TopFloatingWindowGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
          </Grid>
          <Grid Grid.Row="1" Name="VertFloatingWindowGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
          </Grid>
          <Grid Grid.Row="2" Name="HorzFloatingWindowGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="1*" />
              <ColumnDefinition Width="2.5*" />
              <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
          </Grid>
        </Grid>

        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
          </Grid.ColumnDefinitions>

          <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Style="{StaticResource TabButton}" Name="LayersButton" Click="LayersButton_Click" HorizontalAlignment="Center">Layers</Button>
          </StackPanel>

          <StackPanel Grid.Column="0" Grid.Row="1" Margin="15" Panel.ZIndex="-15">
          </StackPanel>

          <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Vertical"  VerticalAlignment="Top" HorizontalAlignment="Center">
            <StackPanel x:Name="MainLayersPanel" Visibility="Collapsed" Orientation="Vertical" Background="WhiteSmoke">
              <Label Content="Layers" HorizontalAlignment="Right"></Label>
            </StackPanel>
          </StackPanel>

          <StackPanel Grid.Row="3" Grid.ColumnSpan="4" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="5">
            <Button Style="{StaticResource TabButton}" x:Name="Button1" Click="Button1_Click">Button 1</Button>
            <Button Style="{StaticResource TabButton}" x:Name="Button2" Click="Button2_Click">Button 2</Button>
          </StackPanel>

        </Grid>
      </Grid>
    </local:OverlayControl>
  </Grid>
</Window>
